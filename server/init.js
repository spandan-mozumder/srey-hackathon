import mongoose from "mongoose";
import { Feedback } from "./src/model/feedback.model.js";

const MONGO_URI = "mongo uri";

const feedbackData = [
  {
    patientID: "PAT001",
    hospitalID: "HOSP001",
    departmentId: "emergency",
    sentimentIndex: 1,
    topic: "waitTime",
    contentTypeIndex: 0,
    textContent: "I was attended to very quickly, impressive service!",
    mediaContent: "",
    response: "",
    response_status: false,
  },
  {
    patientID: "PAT001",
    hospitalID: "HOSP002",
    departmentId: "cardiology",
    sentimentIndex: 0,
    topic: "billing",
    contentTypeIndex: 0,
    textContent: "Billing was smooth but slow.",
    mediaContent: "",
    response: "",
    response_status: false,
  },
  {
    patientID: "PAT002",
    hospitalID: "HOSP001",
    departmentId: "emergency",
    sentimentIndex: -1,
    topic: "communication",
    contentTypeIndex: 0,
    textContent: "I had no idea what was going on during the procedure.",
    mediaContent: "",
    response:
      "We're sorry to hear this. We are reviewing our communication protocols.",
    response_status: true,
  },
  {
    patientID: "PAT002",
    hospitalID: "HOSP003",
    departmentId: "pediatrics",
    sentimentIndex: 1,
    topic: "comfortPrivacy",
    contentTypeIndex: 0,
    textContent: "Very comforting space for kids.",
    mediaContent: "",
    response: "",
    response_status: false,
  },
  {
    patientID: "PAT003",
    hospitalID: "HOSP002",
    departmentId: "orthopedics",
    sentimentIndex: 0,
    topic: "staff",
    contentTypeIndex: 0,
    textContent: "Staff was okay, not very attentive though.",
    mediaContent: "",
    response: "",
    response_status: false,
  },
  {
    patientID: "PAT003",
    hospitalID: "HOSP003",
    departmentId: "radiology",
    sentimentIndex: 1,
    topic: "digitalExperience",
    contentTypeIndex: 0,
    textContent: "Online report system was quick and easy.",
    mediaContent: "",
    response: "",
    response_status: false,
  },
  {
    patientID: "PAT004",
    hospitalID: "HOSP001",
    departmentId: "emergency",
    sentimentIndex: -1,
    topic: "cleanliness",
    contentTypeIndex: 0,
    textContent: "Bathrooms were not cleaned regularly.",
    mediaContent: "",
    response: "",
    response_status: false,
  },
  {
    patientID: "PAT004",
    hospitalID: "HOSP002",
    departmentId: "cardiology",
    sentimentIndex: 1,
    topic: "staff",
    contentTypeIndex: 0,
    textContent: "The nurses and doctors were very supportive and kind.",
    mediaContent: "",
    response: "",
    response_status: false,
  },
  {
    patientID: "PAT005",
    hospitalID: "HOSP001",
    departmentId: "emergency",
    sentimentIndex: 0,
    topic: "communication",
    contentTypeIndex: 0,
    textContent: "Was informed but felt rushed.",
    mediaContent: "",
    response: "",
    response_status: false,
  },
  {
    patientID: "PAT005",
    hospitalID: "HOSP003",
    departmentId: "pediatrics",
    sentimentIndex: 1,
    topic: "pdc",
    contentTypeIndex: 0,
    textContent: "Patient care coordinator was helpful and polite.",
    mediaContent: "",
    response: "",
    response_status: false,
  },
  {
    patientID: "PAT006",
    hospitalID: "HOSP002",
    departmentId: "radiology",
    sentimentIndex: -1,
    topic: "waitTime",
    contentTypeIndex: 0,
    textContent: "Waited over 2 hours for a simple scan.",
    mediaContent: "",
    response: "",
    response_status: false,
  },
  {
    patientID: "PAT006",
    hospitalID: "HOSP001",
    departmentId: "pharmacy",
    sentimentIndex: 0,
    topic: "billing",
    contentTypeIndex: 0,
    textContent: "Pharmacy billing was confusing.",
    mediaContent: "",
    response: "",
    response_status: false,
  },
  {
    patientID: "PAT007",
    hospitalID: "HOSP001",
    departmentId: "orthopedics",
    sentimentIndex: 1,
    topic: "foodAmenities",
    contentTypeIndex: 0,
    textContent: "Healthy meal options were a plus.",
    mediaContent: "",
    response: "",
    response_status: false,
  },
  {
    patientID: "PAT007",
    hospitalID: "HOSP003",
    departmentId: "cardiology",
    sentimentIndex: -1,
    topic: "communication",
    contentTypeIndex: 0,
    textContent: "Unclear instructions from the doctor.",
    mediaContent: "",
    response: "",
    response_status: false,
  },
  {
    patientID: "PAT008",
    hospitalID: "HOSP001",
    departmentId: "pediatrics",
    sentimentIndex: 0,
    topic: "cleanliness",
    contentTypeIndex: 0,
    textContent: "Clean but too crowded.",
    mediaContent: "",
    response: "",
    response_status: false,
  },
  {
    patientID: "PAT008",
    hospitalID: "HOSP002",
    departmentId: "orthopedics",
    sentimentIndex: 1,
    topic: "staff",
    contentTypeIndex: 0,
    textContent: "Attending nurse was exceptionally kind.",
    mediaContent: "",
    response: "",
    response_status: false,
  },
  {
    patientID: "PAT009",
    hospitalID: "HOSP002",
    departmentId: "radiology",
    sentimentIndex: -1,
    topic: "digitalExperience",
    contentTypeIndex: 0,
    textContent: "App kept crashing while booking appointment.",
    mediaContent: "",
    response: "",
    response_status: false,
  },
  {
    patientID: "PAT009",
    hospitalID: "HOSP003",
    departmentId: "pharmacy",
    sentimentIndex: 1,
    topic: "billing",
    contentTypeIndex: 0,
    textContent: "Got discounts on prescriptions, very helpful.",
    mediaContent: "",
    response: "",
    response_status: false,
  },
  {
    patientID: "PAT010",
    hospitalID: "HOSP001",
    departmentId: "neurology",
    sentimentIndex: 0,
    topic: "pdc",
    contentTypeIndex: 0,
    textContent: "Support group was decent but impersonal.",
    mediaContent: "",
    response: "",
    response_status: false,
  },
  {
    patientID: "PAT010",
    hospitalID: "HOSP003",
    departmentId: "cardiology",
    sentimentIndex: 1,
    topic: "comfortPrivacy",
    contentTypeIndex: 0,
    textContent: "Clean rooms with great privacy.",
    mediaContent: "",
    response: "",
    response_status: false,
  },
];

const insertFeedback = async () => {
  try {
    await mongoose.connect(MONGO_URI, {
      useNewUrlParser: true,
      useUnifiedTopology: true,
    });

    console.log("✅ Connected to MongoDB");

    const result = await Feedback.insertMany(feedbackData);
    console.log(`✅ Inserted ${result.length} feedback documents`);

    await mongoose.disconnect();
    console.log("✅ Disconnected from MongoDB");
  } catch (error) {
    console.error("❌ Error inserting feedback:", error);
  }
};

insertFeedback();
